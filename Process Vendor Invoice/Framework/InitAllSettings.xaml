<Activity mc:Ignorable="sap sap2010" x:Class="InitiAllSettings" this:InitiAllSettings.in_ConfigFile="Data\Config.json" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Names of the sheets corresponding to settings and constants in the configuration file." Name="in_ConfigFile" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>666,1227</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Initialize, populate and output a configuration Dictionary to be used throughout the project. &#xA;Settings and constants are read from the local configuration file, and assets are fetched from Orchestrator. &#xA;Asset values overwrite settings and constant values if they are defined with the same name." DisplayName="Initialize All Settings" sap:VirtualizedContainerService.HintSize="586,1162" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ConfigText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="RootConfig" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Assets" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Constants" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Credentials" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Settings" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Read and convert the values on json config file." DisplayName="Read Config File" sap:VirtualizedContainerService.HintSize="544,121" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="683,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Reading config file...&quot;]" />
      <Assign DisplayName="Assing out_Config (initialization)" sap:VirtualizedContainerService.HintSize="683,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Config]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(of String, Object)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ReadTextFile File="{x:Null}" Content="[ConfigText]" DisplayName="Read Text File" FileName="Data\Config.json" sap:VirtualizedContainerService.HintSize="683,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
      <Sequence DisplayName="Get Root Values" sap:VirtualizedContainerService.HintSize="683,1144" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="641,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[RootConfig]" JsonString="[ConfigText]" />
        <If Condition="[RootConfig.ContainsKey(&quot;Assets&quot;)]" sap:VirtualizedContainerService.HintSize="641,208" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Then>
            <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[Assets]" JsonString="[RootConfig(&quot;Assets&quot;).ToString]" />
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Assets]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[RootConfig.ContainsKey(&quot;Constants&quot;)]" sap:VirtualizedContainerService.HintSize="641,208" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7" JsonObject="[Constants]" JsonString="[RootConfig(&quot;Constants&quot;).ToString]" />
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Constants]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[RootConfig.ContainsKey(&quot;Credentials&quot;)]" sap:VirtualizedContainerService.HintSize="641,208" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Then>
            <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8" JsonObject="[Credentials]" JsonString="[RootConfig(&quot;Credentials&quot;).ToString]" />
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Credentials]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[RootConfig.ContainsKey(&quot;Settings&quot;)]" sap:VirtualizedContainerService.HintSize="641,208" sap2010:WorkflowViewState.IdRef="If_12">
          <If.Then>
            <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9" JsonObject="[Settings]" JsonString="[RootConfig(&quot;Settings&quot;).ToString]" />
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Settings]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </Sequence>
      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Attribute the Settings and Constants Values to their respective keys on out_Config argument" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="683,236" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Settings.Concat(Constants)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Object)">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" Name="item" />
            </ActivityAction.Argument>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[out_Config(item.Key)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[item.Value]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Get Assets from Orchestrator" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="683,302" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Assets]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Object)">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" Name="asset" />
            </ActivityAction.Argument>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[asset.Value.ToString]" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="444,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:Object">[out_Config(asset.Key)]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="683,517" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Credentials]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Object)">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" Name="credential" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CredentialConfig" />
                <Variable x:TypeArguments="ss:SecureString" Name="Password" />
                <Variable x:TypeArguments="x:String" Name="UserName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_10" JsonObject="[CredentialConfig]" JsonString="[Credentials(credential.Key).ToString]" />
              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[credential.Key]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[Password]" Username="[UserName]" />
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[out_Config(CredentialConfig("User").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[UserName]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[out_Config(CredentialConfig("Password").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[Password]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Delete/Create Path" sap:VirtualizedContainerService.HintSize="544,911" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="pathExists" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists Resource="{x:Null}" DisplayName="Path exists" Exists="[pathExists]" sap:VirtualizedContainerService.HintSize="482,99" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="ACME\PDFs" PathType="Folder" />
      <If Condition="[pathExists]" sap:VirtualizedContainerService.HintSize="482,650" sap2010:WorkflowViewState.IdRef="If_13">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,308" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeleteFolderX DisplayName="Delete Folder" sap:VirtualizedContainerService.HintSize="358,89" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Path="ACME\PDFs" Recursive="True" />
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="358,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="ACME\PDFs" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,179" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="358,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="ACME\PDFs" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>